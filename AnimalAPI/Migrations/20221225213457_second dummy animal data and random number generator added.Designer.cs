// <auto-generated />
using AnimalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimalAPI.Migrations
{
    [DbContext(typeof(AnimalAPIDbContext))]
    [Migration("20221225213457_second dummy animal data and random number generator added")]
    partial class seconddummyanimaldataandrandomnumbergeneratoradded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalAPI.Models.AnimalInformationn.AnimalInfo", b =>
                {
                    b.Property<int>("AnimalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("animalinfoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimalInfoId"));

                    b.Property<string>("AnimalInformation")
                        .HasColumnType("text")
                        .HasColumnName("animalinformation");

                    b.HasKey("AnimalInfoId")
                        .HasName("pk_animalinfos");

                    b.ToTable("animalinfos", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalInfoId = 6,
                            AnimalInformation = "The Shire is a British breed of draught horse. It is usually black, bay, or grey. It is a tall breed, and Shires have at various times held world records both for the largest horse and for the tallest horse. The Shire has a great capacity for weight-pulling; it was used for farm work, to tow barges at a time when the canal system was the principal means of goods transport, and as a cart-horse for road transport. One traditional use was for pulling brewer's drays for delivery of beer, and some are still used in this way; others are used for forestry, for riding and for commercial promotion."
                        },
                        new
                        {
                            AnimalInfoId = 7,
                            AnimalInformation = "The Maine Coon is a large domesticated cat breed. It is one of the oldest natural breeds in North America. The breed originated in the U.S. state of Maine, where it is the official state cat.The breed was popular in cat shows in the late 19th century, but its existence became threatened when long-haired breeds from overseas were introduced in the early 20th century. The Maine Coon has since made a comeback and is now the third most popular pedigreed cat breed in the world."
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("animalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("AnimalInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("animalinfoid");

                    b.Property<int>("BreedId")
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    b.Property<int>("SpecieId")
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    b.HasKey("AnimalId")
                        .HasName("pk_animals");

                    b.HasIndex("AnimalInfoId")
                        .HasDatabaseName("ix_animals_animalinfoid");

                    b.HasIndex("BreedId")
                        .HasDatabaseName("ix_animals_breedid");

                    b.HasIndex("SpecieId")
                        .HasDatabaseName("ix_animals_specieid");

                    b.ToTable("animals", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = 6,
                            AnimalInfoId = 6,
                            BreedId = 6,
                            SpecieId = 6
                        },
                        new
                        {
                            AnimalId = 7,
                            AnimalInfoId = 7,
                            BreedId = 7,
                            SpecieId = 7
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Breedd.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BreedId"));

                    b.Property<string>("BName")
                        .HasColumnType("text")
                        .HasColumnName("bname");

                    b.HasKey("BreedId")
                        .HasName("pk_breeds");

                    b.ToTable("breeds", (string)null);

                    b.HasData(
                        new
                        {
                            BreedId = 6,
                            BName = "Shire Horse"
                        },
                        new
                        {
                            BreedId = 7,
                            BName = "Maine Coon"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Speciee.Specie", b =>
                {
                    b.Property<int>("SpecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpecieId"));

                    b.Property<string>("SName")
                        .HasColumnType("text")
                        .HasColumnName("sname");

                    b.HasKey("SpecieId")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);

                    b.HasData(
                        new
                        {
                            SpecieId = 6,
                            SName = "Horse"
                        },
                        new
                        {
                            SpecieId = 7,
                            SName = "Cat"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.HasOne("AnimalAPI.Models.AnimalInformationn.AnimalInfo", "AnimalInfo")
                        .WithMany()
                        .HasForeignKey("AnimalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_animalinfos_animalinfoid");

                    b.HasOne("AnimalAPI.Models.Breedd.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_breeds_breedid");

                    b.HasOne("AnimalAPI.Models.Speciee.Specie", "Specie")
                        .WithMany()
                        .HasForeignKey("SpecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_species_specieid");

                    b.Navigation("AnimalInfo");

                    b.Navigation("Breed");

                    b.Navigation("Specie");
                });
#pragma warning restore 612, 618
        }
    }
}
