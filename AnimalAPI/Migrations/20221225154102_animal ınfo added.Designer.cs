// <auto-generated />
using AnimalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimalAPI.Migrations
{
    [DbContext(typeof(AnimalAPIDbContext))]
    [Migration("20221225154102_animal ınfo added")]
    partial class animalınfoadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalAPI.Models.AnimalInformationn.AnimalInfo", b =>
                {
                    b.Property<int>("AnimalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("animalinfoid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimalInfoId"));

                    b.Property<string>("AnimalInformation")
                        .HasColumnType("text")
                        .HasColumnName("animalinformation");

                    b.HasKey("AnimalInfoId")
                        .HasName("pk_animalinfos");

                    b.ToTable("animalinfos", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalInfoId = 6,
                            AnimalInformation = "Torrent is a majestic wild horse of the Mangalarga Marchador species, native to the rolling grasslands of Brazil. With a sleek coat and well-muscled body, this animal is a formidable sight as it roams freely through its natural habitat. Known for their intelligence and endurance, the Mangalarga Marchador is a hardy breed that has adapted to survive in a range of environments. This individual is no exception, with a strong and agile body that allows it to navigate the varied terrain of its home. Whether galloping across open fields or navigating rocky cliffs, this animal is a true symbol of the power and beauty of nature."
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("animalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("AnimalInfoId")
                        .HasColumnType("integer")
                        .HasColumnName("animalinfoid");

                    b.Property<int>("BreedId")
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    b.Property<int>("SpecieId")
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    b.HasKey("AnimalId")
                        .HasName("pk_animals");

                    b.HasIndex("AnimalInfoId")
                        .HasDatabaseName("ix_animals_animalinfoid");

                    b.HasIndex("BreedId")
                        .HasDatabaseName("ix_animals_breedid");

                    b.HasIndex("SpecieId")
                        .HasDatabaseName("ix_animals_specieid");

                    b.ToTable("animals", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = 6,
                            AnimalInfoId = 6,
                            BreedId = 6,
                            SpecieId = 6
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Breedd.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BreedId"));

                    b.Property<string>("BName")
                        .HasColumnType("text")
                        .HasColumnName("bname");

                    b.HasKey("BreedId")
                        .HasName("pk_breeds");

                    b.ToTable("breeds", (string)null);

                    b.HasData(
                        new
                        {
                            BreedId = 6,
                            BName = "Mangalarga Marchador"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Speciee.Specie", b =>
                {
                    b.Property<int>("SpecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpecieId"));

                    b.Property<string>("SName")
                        .HasColumnType("text")
                        .HasColumnName("sname");

                    b.HasKey("SpecieId")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);

                    b.HasData(
                        new
                        {
                            SpecieId = 6,
                            SName = "Horse"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.HasOne("AnimalAPI.Models.AnimalInformationn.AnimalInfo", "AnimalInfo")
                        .WithMany()
                        .HasForeignKey("AnimalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_animalinfos_animalinfoid");

                    b.HasOne("AnimalAPI.Models.Breedd.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_breeds_breedid");

                    b.HasOne("AnimalAPI.Models.Speciee.Specie", "Specie")
                        .WithMany()
                        .HasForeignKey("SpecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_species_specieid");

                    b.Navigation("AnimalInfo");

                    b.Navigation("Breed");

                    b.Navigation("Specie");
                });
#pragma warning restore 612, 618
        }
    }
}
