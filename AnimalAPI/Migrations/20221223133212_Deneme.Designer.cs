// <auto-generated />
using AnimalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimalAPI.Migrations
{
    [DbContext(typeof(AnimalAPIDbContext))]
    [Migration("20221223133212_Deneme")]
    partial class Deneme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("animalid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("BreedId")
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SpecieId")
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    b.HasKey("AnimalId")
                        .HasName("pk_animals");

                    b.HasIndex("BreedId")
                        .HasDatabaseName("ix_animals_breedid");

                    b.HasIndex("SpecieId")
                        .HasDatabaseName("ix_animals_specieid");

                    b.ToTable("animals", (string)null);

                    b.HasData(
                        new
                        {
                            AnimalId = 6,
                            BreedId = 6,
                            Name = "Torrent",
                            SpecieId = 6
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Breedd.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("breedid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BreedId"));

                    b.Property<string>("BName")
                        .HasColumnType("text")
                        .HasColumnName("bname");

                    b.HasKey("BreedId")
                        .HasName("pk_breeds");

                    b.ToTable("breeds", (string)null);

                    b.HasData(
                        new
                        {
                            BreedId = 6,
                            BName = "Mangalarga Marchador"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Speciee.Specie", b =>
                {
                    b.Property<int>("SpecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("specieid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpecieId"));

                    b.Property<string>("SName")
                        .HasColumnType("text")
                        .HasColumnName("sname");

                    b.HasKey("SpecieId")
                        .HasName("pk_species");

                    b.ToTable("species", (string)null);

                    b.HasData(
                        new
                        {
                            SpecieId = 6,
                            SName = "Horse"
                        });
                });

            modelBuilder.Entity("AnimalAPI.Models.Animall.Animal", b =>
                {
                    b.HasOne("AnimalAPI.Models.Breedd.Breed", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_breeds_breedid");

                    b.HasOne("AnimalAPI.Models.Speciee.Specie", "Specie")
                        .WithMany("Animals")
                        .HasForeignKey("SpecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animals_species_specieid");

                    b.Navigation("Breed");

                    b.Navigation("Specie");
                });

            modelBuilder.Entity("AnimalAPI.Models.Breedd.Breed", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("AnimalAPI.Models.Speciee.Specie", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
